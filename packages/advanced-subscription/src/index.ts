import { type Context, Schema } from "koishi";
// biome-ignore lint/correctness/noUnusedImports: <import type>
import {} from "koishi-plugin-bilibili-notify";

export const name = "bilibili-notify-advanced-subscription";

export interface Config {
	// biome-ignore lint/complexity/noBannedTypes: <obj>
	subs: {};
}

export const Config: Schema<Config> = Schema.object({
	subs: Schema.dict(
		Schema.object({
			uid: Schema.string().required().description("ËÆ¢ÈòÖÁî®Êà∑UID"),
			roomid: Schema.string().description(
				"ËÆ¢ÈòÖÁî®Êà∑Áõ¥Êí≠Èó¥Âè∑Ôºå‰∏çÂ°´Âàô‰ºöËØ∑Ê±ÇÁî®Êà∑Êé•Âè£Ëá™Âä®Ëé∑ÂèñÔºå‰ΩÜËØ∑Ê±ÇËØ•Êé•Âè£ÂÆπÊòìÈ£éÊéß",
			),
			dynamic: Schema.boolean().default(false).description("ÊòØÂê¶ËÆ¢ÈòÖÁî®Êà∑Âä®ÊÄÅ"),
			live: Schema.boolean().default(false).description("ÊòØÂê¶ËÆ¢ÈòÖÁî®Êà∑Áõ¥Êí≠"),
			target: Schema.array(
				Schema.object({
					platform: Schema.string()
						.required()
						.description("Êé®ÈÄÅÂπ≥Âè∞Ôºå‰æãÂ¶Çonebot„ÄÅqq„ÄÅdiscord"),
					channelArr: Schema.array(
						Schema.object({
							channelId: Schema.string().required().description("È¢ëÈÅì/Áæ§ÁªÑÂè∑"),
							dynamic: Schema.boolean().default(true).description("Âä®ÊÄÅÈÄöÁü•"),
							dynamicAtAll: Schema.boolean()
								.default(false)
								.description("Âä®ÊÄÅËâæÁâπÂÖ®‰Ωì"),
							live: Schema.boolean().default(true).description("Áõ¥Êí≠ÈÄöÁü•"),
							liveAtAll: Schema.boolean()
								.default(true)
								.description("ÂºÄÊí≠ËâæÁâπÂÖ®‰Ωì"),
							liveGuardBuy: Schema.boolean()
								.default(false)
								.description("‰∏äËà∞ÈÄöÁü•"),
							superchat: Schema.boolean().default(false).description("SCÈÄöÁü•"),
							wordcloud: Schema.boolean()
								.default(true)
								.description("ÂºπÂπïËØç‰∫ëÈÄöÁü•"),
							liveSummary: Schema.boolean()
								.default(true)
								.description("Áõ¥Êí≠ÊÄªÁªìÈÄöÁü•"),
						}),
					)
						.role("table")
						.required()
						.description("ÈúÄÊé®ÈÄÅÁöÑÈ¢ëÈÅì/Áæ§ÁªÑËØ¶ÁªÜËÆæÁΩÆ"),
				}),
			).description(
				"ËÆ¢ÈòÖÁî®Êà∑ÈúÄË¶ÅÂèëÈÄÅÁöÑÂπ≥Âè∞ÂíåÈ¢ëÈÅì/Áæ§ÁªÑ‰ø°ÊÅØ(‰∏Ä‰∏™Âπ≥Âè∞‰∏ãÂèØ‰ª•Êé®ÈÄÅÂ§ö‰∏™È¢ëÈÅì/Áæ§ÁªÑ)",
			),
			customLiveSummary: Schema.intersect([
				Schema.object({
					enable: Schema.boolean()
						.default(false)
						.description("ÊòØÂê¶ÂºÄÂêØ‰∏™ÊÄßÂåñÁõ¥Êí≠ÊÄªÁªì"),
				}),
				Schema.union([
					Schema.object({
						enable: Schema.const(true).required(),
						liveSummary: Schema.array(String)
							.default([
								"üîç„ÄêÂºπÂπïÊÉÖÊä•Á´ô„ÄëÊú¨Âú∫Áõ¥Êí≠Êï∞ÊçÆÂ¶Ç‰∏ãÔºö",
								"üßç‚Äç‚ôÇÔ∏è ÊÄªÂÖ± -dmc ‰Ωç-mdn‰∏äÁ∫ø",
								"üí¨ ÂÖ±ËÆ° -dca Êù°ÂºπÂπïÈ£ûÈ©∞ËÄåËøá",
								"üìä ÁÉ≠ËØç‰∫ëÂõæÂ∑≤ÁîüÊàêÔºåÂø´Êù•ÁúãÁúã‰Ω†ÊúâÊ≤°Êúâ‰∏äÊ¶úÔºÅ",
								"üëë Êú¨Âú∫È°∂Á∫ßËæìÂá∫ÈÄâÊâãÔºö",
								"ü•á -un1 - ÂºπÂπïËæìÂá∫ -dc1 Êù°",
								"ü•à -un2 - ÂºπÂπï -dc2 Êù°ÔºåËêåÂäõÊÉä‰∫∫",
								"ü•â -un3 - -dc3 Êù°Á≤æÂáÜÁãôÂáª",
								"üéñÔ∏è ÁâπÂà´ÂòâÂ•ñÔºö-un4 & -un5",
								"‰Ω†‰ª¨ÁöÑÂºπÂπïÔºåÊàë‰ª¨ÈÉΩËÆ∞ÂΩïÂú®Ê°àÔºÅüïµÔ∏è‚Äç‚ôÄÔ∏è",
							])
							.role("table")
							.description(
								"Ëá™ÂÆö‰πâÁõ¥Êí≠ÊÄªÁªìËØ≠ÔºåÂºÄÂêØÂºπÂπïËØç‰∫ëËá™Âä®ÂèëÈÄÅ„ÄÇÂèòÈáèËß£ÈáäÔºö-dmc‰ª£Ë°®ÊÄªÂºπÂπïÂèëÈÄÅ‰∫∫Êï∞Ôºå-mdn‰ª£Ë°®‰∏ªÊí≠Á≤â‰∏ùÁâåÂ≠êÂêçÔºå-dca‰ª£Ë°®ÊÄªÂºπÂπïÊï∞Ôºå-un1Âà∞-un5‰ª£Ë°®ÂºπÂπïÂèëÈÄÅÊù°Êï∞Ââç‰∫îÂêçÁî®Êà∑ÁöÑÁî®Êà∑ÂêçÔºå-dc1Âà∞-dc5‰ª£Ë°®ÂºπÂπïÂèëÈÄÅÊù°Êï∞Ââç‰∫îÂêçÁöÑÂºπÂπïÂèëÈÄÅÊï∞ÈáèÔºåÊï∞ÁªÑÊØè‰∏ÄË°å‰ª£Ë°®Êç¢Ë°å",
							),
					}),
					Schema.object({}),
				]),
			]),
			customLiveMsg: Schema.intersect([
				Schema.object({
					enable: Schema.boolean()
						.default(false)
						.description("ÊòØÂê¶ÂºÄÂêØ‰∏™ÊÄßÂåñÁõ¥Êí≠Ê∂àÊÅØËÆæÁΩÆ"),
				}),
				Schema.union([
					Schema.object({
						enable: Schema.const(true).required(),
						customLiveStart: Schema.string().description(
							"Ëá™ÂÆö‰πâÂºÄÊí≠ÊèêÁ§∫ËØ≠Ôºå-name‰ª£Ë°®UPÊòµÁß∞Ôºå-follower‰ª£Ë°®ÂΩìÂâçÁ≤â‰∏ùÊï∞Ôºå-link‰ª£Ë°®Áõ¥Êí≠Èó¥ÈìæÊé•ÔºàÂ¶ÇÊûú‰ΩøÁî®ÁöÑÊòØQQÂÆòÊñπÊú∫Âô®‰∫∫ÔºåËØ∑‰∏çË¶Å‰ΩøÁî®ÔºâÔºå\\n‰∏∫Êç¢Ë°å„ÄÇ‰æãÂ¶Ç-nameÂºÄÊí≠Âï¶Ôºå‰ºöÂèëÈÄÅ‰∏∫xxxUPÂºÄÊí≠Âï¶",
						),
						customLive: Schema.string().description(
							"Ëá™ÂÆö‰πâÁõ¥Êí≠‰∏≠ÊèêÁ§∫ËØ≠Ôºå-name‰ª£Ë°®UPÊòµÁß∞Ôºå-time‰ª£Ë°®ÂºÄÊí≠Êó∂ÈïøÔºå-watched‰ª£Ë°®Á¥ØËÆ°ËßÇÁúã‰∫∫Êï∞Ôºå-link‰ª£Ë°®Áõ¥Êí≠Èó¥ÈìæÊé•ÔºàÂ¶ÇÊûú‰ΩøÁî®ÁöÑÊòØQQÂÆòÊñπÊú∫Âô®‰∫∫ÔºåËØ∑‰∏çË¶Å‰ΩøÁî®ÔºâÔºå\\n‰∏∫Êç¢Ë°å„ÄÇ‰æãÂ¶Ç-nameÊ≠£Âú®Áõ¥Êí≠Ôºå‰ºöÂèëÈÄÅ‰∏∫xxxUPÊ≠£Âú®Áõ¥Êí≠xxx",
						),
						customLiveEnd: Schema.string().description(
							"Ëá™ÂÆö‰πâ‰∏ãÊí≠ÊèêÁ§∫ËØ≠Ôºå-name‰ª£Ë°®UPÊòµÁß∞Ôºå-follower_change‰ª£Ë°®Êú¨Âú∫Áõ¥Êí≠Á≤â‰∏ùÊï∞ÂèòÔºå-time‰ª£Ë°®ÂºÄÊí≠Êó∂ÈïøÔºå\\n‰∏∫Êç¢Ë°å„ÄÇ‰æãÂ¶Ç-name‰∏ãÊí≠Âï¶ÔºåÊú¨Ê¨°Áõ¥Êí≠‰∫Ü-timeÔºå‰ºöÂèëÈÄÅ‰∏∫xxxUP‰∏ãÊí≠Âï¶ÔºåÁõ¥Êí≠Êó∂Èïø‰∏∫xxÂ∞èÊó∂xxÂàÜÈíüxxÁßí",
						),
					}),
					Schema.object({}),
				]),
			]),
			customCardStyle: Schema.intersect([
				Schema.object({
					enable: Schema.boolean()
						.default(false)
						.description("ÊòØÂê¶ÂºÄÂêØËá™ÂÆö‰πâÂç°ÁâáÈ¢úËâ≤"),
				}),
				Schema.union([
					Schema.object({
						enable: Schema.const(true).required(),
						cardColorStart: Schema.string()
							.pattern(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)
							.description(
								"Êé®ÈÄÅÂç°ÁâáÁöÑÂºÄÂßãÊ∏êÂèòËÉåÊôØËâ≤ÔºåËØ∑Â°´ÂÖ•16ËøõÂà∂È¢úËâ≤‰ª£Á†ÅÔºåÂèÇËÄÉÁΩëÁ´ôÔºöhttps://webkul.github.io/coolhue/",
							),
						cardColorEnd: Schema.string()
							.pattern(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)
							.description(
								"Êé®ÈÄÅÂç°ÁâáÁöÑÁªìÊùüÊ∏êÂèòËÉåÊôØËâ≤ÔºåËØ∑Â°´ÂÖ•16ËøõÂà∂È¢úËâ≤‰ª£Á†ÅÔºåÂèÇËÄÉÁΩëÁ´ôÔºöhttps://colorate.azurewebsites.net/",
							),
						cardBasePlateColor: Schema.string()
							.pattern(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)
							.description("Êé®ÈÄÅÂç°ÁâáÂ∫ïÊùøÈ¢úËâ≤ÔºåËØ∑Â°´ÂÖ•16ËøõÂà∂È¢úËâ≤‰ª£Á†Å"),
						cardBasePlateBorder: Schema.string()
							.pattern(/\d*\.?\d+(?:px|em|rem|%|vh|vw|vmin|vmax)/)
							.description(
								"Êé®ÈÄÅÂç°ÁâáÂ∫ïÊùøËæπÊ°ÜÂÆΩÂ∫¶ÔºåËØ∑Â°´ÂÖ•cssÂçï‰ΩçÔºå‰æãÂ¶Ç1pxÔºå12.5remÔºå100%",
							),
					}),
					Schema.object({}),
				]),
			]),
		}).collapse(),
	),
});

export function apply(ctx: Context, config: Config) {
	// Ëß¶Âèë‰∫ã‰ª∂
	ctx.emit("bilibili-notify/advanced-sub", config.subs);
	// Ê≥®ÂÜåÁõëÂê¨‰∫ã‰ª∂
	ctx.on("bilibili-notify/ready-to-recive", () => {
		// Ëß¶Âèë‰∫ã‰ª∂
		ctx.emit("bilibili-notify/advanced-sub", config.subs);
	});
}
