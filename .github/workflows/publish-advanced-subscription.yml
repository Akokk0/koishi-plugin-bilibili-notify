name: Publish advanced-subscription

on:
  push:
    branches:
      - "monorepo"
    paths:
      - "packages/advanced-subscription/package.json"
      - "packages/advanced-subscription/**"

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    name: Conditional Publish (advanced-subscription)

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check version change
        id: check_version
        run: |
          set -e

          REPO_PACKAGE_PATH="packages/advanced-subscription/package.json"

          CURRENT_VERSION=$(jq -r '.version' "$REPO_PACKAGE_PATH")
          echo "Current version: $CURRENT_VERSION"

          BEFORE_SHA="${{ github.event.before }}"
          AFTER_SHA="${{ github.sha }}"

          if [ -z "$BEFORE_SHA" ] || [ "$BEFORE_SHA" = "0000000000000000000000000000000000000000" ]; then
            if git rev-parse HEAD^ >/dev/null 2>&1; then
              BEFORE_SHA=$(git rev-parse HEAD^)
            else
              echo "First commit on branch â€” assuming version changed."
              echo "publish=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi

          if ! git diff --name-only "$BEFORE_SHA" "$AFTER_SHA" -- "$REPO_PACKAGE_PATH" | grep -q .; then
            echo "package.json not changed in this push (no publish)."
            echo "publish=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          if git diff -U0 -G '^\s*"version"\s*:\s*"' "$BEFORE_SHA" "$AFTER_SHA" -- "$REPO_PACKAGE_PATH" --quiet; then
            echo "Version unchanged in this push."
            echo "publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version changed in this push."
            echo "publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        if: steps.check_version.outputs.publish == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20
        env:
          DISABLE_V8_COMPILE_CACHE: 1
      
      - name: Enable Corepack
        if: steps.check_version.outputs.publish == 'true'
        run: corepack enable

      - name: Install dependencies
        if: steps.check_version.outputs.publish == 'true'
        run: yarn install --no-immutable

      - name: Build
        if: steps.check_version.outputs.publish == 'true'
        working-directory: packages/advanced-subscription
        run: yarn build

      - name: Publish
        if: steps.check_version.outputs.publish == 'true'
        working-directory: packages/advanced-subscription
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
